#!/usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var chalk_1 = __importDefault(require("chalk"));
//import clear from 'clear'
var figlet_1 = __importDefault(require("figlet"));
var commander_1 = __importDefault(require("commander"));
var configstore_1 = __importDefault(require("configstore"));
//clear();
console.log(chalk_1.default.green(figlet_1.default.textSync('cpln', { horizontalLayout: 'full' })));
commander_1.default
    .version('1.0.1')
    .description("Control Plane Corporation CLI")
    .option('-l, --login <username>', 'Login')
    .option('-g, --create-gvc', 'Create a GVC (Global Virtual Cloud)')
    .option('-e, --environment <environment>', 'Specify the environment, default is prod')
    .parse(process.argv);
var config = new configstore_1.default('cpln');
if (commander_1.default.environment) {
    var env = commander_1.default.environment;
    config.set('environment', env);
}
var environment;
environment = config.get('environment');
if (!environment) {
    environment = 'prod';
    config.set('environment', environment);
}
console.log("ENVIRONMENT: " + environment);
var creds = new configstore_1.default("cpln-" + environment);
if (commander_1.default.login) {
    var key = commander_1.default.login;
    creds.set('key', key);
}
if (!process.argv.slice(2).length) {
    var key = creds.get('key');
    if (!key) {
        console.log('You must provide a key, use cpln -login <key>');
    }
    commander_1.default.outputHelp();
}
